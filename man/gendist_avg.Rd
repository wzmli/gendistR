% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gendist_avg.R
\name{gendist_avg}
\alias{gendist_avg}
\title{Calculate mean genetic distance}
\usage{
gendist_avg(test, focal, plot = FALSE)
}
\arguments{
\item{test}{a dataframe containing nextclade metadata output for all
sequences in the test set (often circulating lineages within a certain
location and timeframe). Function works on the aaSubstitutions column.}

\item{focal}{a dataframe containing nextclade metadata output for all focal
sequences (can be one emerging lineage, or a set of multiple). Function
uses the "aaSubstitutions", and "seqName" (id) columns.}

\item{plot}{an optional logical parameter to return a venn diagram gList object of
the average total aaSubstitutions. Object is created using VennDiagram::draw.pairwise.venn() from
package "VennDiagram". Default is \code{FALSE}.}
}
\value{
returns a 13x13 dataframe object containing the breakdown of the
average comparison of test and focal, per genome segment. Or if
plot=TRUE, returns a list of 2: df = a 13x13 dataframe, plot = a gList
object.
}
\description{
\code{gendist_avg()} calculates the average of various genetic distance metrics
for two groups of SARS-CoV-2 sequences using the "aaSubstitutions" column
generated from a Nextclade metadata output
(\url{https://clades.nextstrain.org/}).
}
\details{
For a detailed explanation of each metric produced, see the vignette.
}
\examples{
# Simple example focusing only on the E segment----------------------------

# Create test df-----------------------------------------------------------
test <- data.frame(
"aaSubstitutions" = c("E:XXX,E:XX1", "E:XXX,E:XX2")
)

# Create focal df----------------------------------------------------------
focal <- data.frame(
"seqName" = c("1"),
"aaSubstitutions" = c("E:XXX,E:XX1,E:XX3")
)

# Execute function---------------------------------------------------------
results <- gendist_avg(test, focal)
results

results_with_plot <- gendist_avg(test, focal, plot=TRUE)
tibble::view(results_with_plot$df)
grid::grid.draw(results_with_plot$plot)

}
